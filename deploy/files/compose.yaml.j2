version: '3.9'

volumes:
  static-volume:
  db-volume:
    labels:
      - database

x-backend: &at_krl_backend
  build:
      context: .
      dockerfile: ./deploy/backend/Dockerfile
  image: at_krl_back
  env_file:
    - .env

services:

  postgres:
    image: postgres:latest
    restart: unless-stopped
    volumes:
      - db-volume:/var/lib/postgresql/data
    environment:
      POSTGRES_DB: {{ env_vars.DB_NAME | default('at_krl_editor') }}
      POSTGRES_USER: {{ env_vars.DB_USER | default('at_krl') }}
      POSTGRES_PASSWORD: ${DB_PASS}
    ports:
      - "{{ env_vars.DB_PORT | default('5432') }}:{{ env_vars.DB_PORT | default('5432') }}"
    expose:
      - "{{ env_vars.DB_PORT | default('5432') }}"
    command: -p {{ env_vars.DB_PORT | default('5432') }}

  redis:
    image: redis:latest
    restart: unless-stopped
    container_name: redis
    ports:
      - {{ env_vars.REDIS_PORT | default('6379') }}:{{ env_vars.REDIS_PORT | default('6379') }}

  backend:
    <<: *at_krl_backend
    container_name: backend
    command: gunicorn --bind 0.0.0.0:{{ env_vars.BACKEND_PORT | default('8888') }} at_krl_editor.wsgi:application -w 4
    env_file:
      - .env
    expose:
      - {{ env_vars.BACKEND_PORT | default('8888') }}
    restart: unless-stopped
    depends_on:
      - postgres

  migrations:
    <<: *at_krl_backend
    container_name: migrations
    command: bash -c "python manage.py makemigrations && python manage.py migrate"
    depends_on:
      - backend

  superuser:
    <<: *at_krl_backend
    container_name: superuser
    command: bash -c "python manage.py createsuperuser --no-input"
    depends_on:
      migrations:
        condition: service_completed_successfully

  collectstatic:
    <<: *at_krl_backend
    container_name: collectstatic
    command: bash -c "python manage.py collectstatic --no-input"
    depends_on:
      - backend
    volumes:
      - static-volume:/app/static

  web-backend:
    build:
      context: .
      dockerfile: ./deploy/nginx/Dockerfile
    container_name: nginx-backend
    ports:
      - {{ env_vars.BACKEND_PORT | default('8888') }}:{{ env_vars.BACKEND_PORT | default('8888') }}/tcp
    restart: unless-stopped
    depends_on:
      - backend
      - collectstatic
    volumes:
      - static-volume:/home/static

  frontend:
    build:
      context: .
      dockerfile: ./deploy/frontend/Dockerfile
    container_name: frontend
    ports:
      - {{ env_vars.FRONTEND_PORT | default('80') }}:{{ env_vars.FRONTEND_PORT | default('80') }}/tcp
    restart: unless-stopped

  worker:
    <<: *at_krl_backend
    container_name: worker
    command: celery -A at_krl_editor worker -l info
    depends_on:
      - migrations
      - redis
    restart: unless-stopped